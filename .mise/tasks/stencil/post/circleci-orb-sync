#!/usr/bin/env bash
#MISE description="Sync CircleCI orb versions if files aren't managed by a Stencil module."
#MISE tools={"gojq" = "latest"}
#
# Syncs the CircleCI orb definition with the version of devbase in the
# stencil.lock file.  By default, it only updates .circleci/config.yml
# (the default config file), but this is only necessary for repositories
# which do not use stencil-circleci to manage the CircleCI config.
# The default config file is validated, others are not (as they may not
# be config files per se, such as orb definitions).
#
# Additional config files can be passed into this script via the
# CIRCLECI_ORB_SYNC_FILES environment variable, which is usually expected
# to be set in the repository's `mise.toml` file.

set -euo pipefail

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
DEVBASE_LIB_DIR="$DIR/../../../../shell/lib"

# shellcheck source=../../../../shell/lib/bootstrap.sh
source "$DEVBASE_LIB_DIR"/bootstrap.sh
# shellcheck source=../../../../shell/lib/box.sh
source "$DEVBASE_LIB_DIR"/box.sh
# shellcheck source=../../../../shell/lib/github.sh
source "$DEVBASE_LIB_DIR"/github.sh
# shellcheck source=../../../../shell/lib/logging.sh
source "$DEVBASE_LIB_DIR"/logging.sh
# shellcheck source=../../../../shell/lib/sed.sh
source "$DEVBASE_LIB_DIR"/sed.sh
# shellcheck source=../../../../shell/lib/shell.sh
source "$DEVBASE_LIB_DIR"/shell.sh

ensure_bash_5_or_greater

repoCircleCIConfig=".circleci/config.yml"
org="$(get_box_field org)"

if [[ "$(get_app_name)" == "devbase" ]]; then
  isDevbaseItself=true
else
  isDevbaseItself=false
fi

if [[ $# == 0 ]] && managed_by_stencil "$repoCircleCIConfig" && [[ $isDevbaseItself == "false" ]]; then
  info "CircleCI config is managed by Stencil, skipping manual CircleCI orb sync" >&2
  exit 0
fi

if [[ $isDevbaseItself == "true" ]]; then
  # devbase itself will always use a local version of devbase, so have
  # the CircleCI orb use the latest (pre-)release version.
  devbaseVersion="$(latest_github_release_version "$org/devbase" true)"
else
  devbaseVersion="$(stencil_module_version "github.com/$org/devbase")"
fi

if [[ $devbaseVersion =~ -rc ]]; then
  replaceVersion="dev:${devbaseVersion:1}"
elif [[ $devbaseVersion == local || ! $devbaseVersion =~ ^v[0-9]+ ]]; then
  replaceVersion="dev:first"
else
  replaceVersion="${devbaseVersion:1}"
fi

info "Replacing CircleCI shared orb version with $replaceVersion"

configFiles=("$repoCircleCIConfig")
if [[ -n ${CIRCLECI_ORB_SYNC_FILES:-} ]]; then
  readarray -t -d ' ' extraFiles < <(echo "$CIRCLECI_ORB_SYNC_FILES")
  configFiles+=("${extraFiles[@]}")
fi

for config in "${configFiles[@]}"; do
  info_sub "Updating $config"
  sed_replace "$org/shared@.\+" "$org/shared@$replaceVersion" "$config"
  if [[ $config == "$repoCircleCIConfig" ]]; then
    circleci config validate --org-slug="github/$org" "$config"
  fi
done
